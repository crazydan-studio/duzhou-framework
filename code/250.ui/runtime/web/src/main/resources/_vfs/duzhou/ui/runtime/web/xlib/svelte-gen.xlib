<?xml version="1.0" encoding="UTF-8" ?>
<!--
  - 渡舟平台 - 致力于构建自运维、自监控、可演化的应用生产平台
  - Copyright (C) 2025 Crazydan Studio <https://studio.crazydan.org>
  -
  - This program is free software: you can redistribute it and/or modify
  - it under the terms of the GNU Lesser General Public License as published by
  - the Free Software Foundation, either version 3 of the License, or
  - (at your option) any later version.
  -
  - This program is distributed in the hope that it will be useful,
  - but WITHOUT ANY WARRANTY; without even the implied warranty of
  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  - GNU Lesser General Public License for more details.
  -
  - You should have received a copy of the GNU Lesser General Public License
  - along with this program.
  - If not, see <https://www.gnu.org/licenses/lgpl-3.0.en.html#license-text>.
  -->

<lib xmlns:x="/nop/schema/xdsl.xdef"
     xmlns:c="c" xmlns:xpl="xpl" xmlns:thisLib="thisLib"
     x:schema="/nop/schema/xlib.xdef"
     x:extends="native-gen.xlib"
>
    <tags>
        <GenComponent outputMode="html">
            <attr name="component"
                  type="io.crazydan.duzhou.framework.ui.schema.XuiComponent" />

            <source>
                <script lang="ts">
                </script>

                <main>
                    <thisLib:GenComponentNode
                            component="${component}"
                            node="${component.template}" />
                </main>

                <style>
                </style>
            </source>
        </GenComponent>

        <GenComponentNode outputMode="html">
            <attr name="component"
                  type="io.crazydan.duzhou.framework.ui.schema.XuiComponent" />
            <attr name="node"
                  type="io.crazydan.duzhou.framework.ui.schema.component.XuiComponentNode" />

            <source>
                <c:for var="child" items="${node.children}">
                    <c:choose>
                        <!-- 构建组件指令 -->
                        <when test="${child.$type == 'xui:layout'}">
                            <div />
                        </when>
                        <when test="${child.$type == 'xui:style'}">
                            <div />
                        </when>
                        <when test="${child.$type == 'xui:dispatch'}">
                            <div />
                        </when>
                        <when test="${child.$type == 'xui:each'}">
                            <div />
                        </when>
                        <when test="${child.$type == 'xui:when'}">
                            <div />
                        </when>
                        <!-- 内置组件 -->
                        <when test="${child.$type == 'Text'}">
                            <thisLib:GenNative_text
                                    component="${component}"
                                    source="${child}" />
                        </when>
                        <!-- 构建组件节点 -->
                        <otherwise>
                            <c:script><![CDATA[
                                const nativeType = component.getNodeNativeType(child);
                            ]]></c:script>

                            <!-- 构建原生组件节点 -->
                            <c:if test="${nativeType != null}">
                                <c:script><![CDATA[
                                    import io.nop.core.resource.component.ResourceComponentManager;

                                    const libPath = location().getPath();
                                    const lib = ResourceComponentManager.instance().loadComponentModel(libPath);
                                    const tag = lib.getTag('GenNative_' + nativeType);

                                    const ret = tag.generateNode({
                                        component,
                                        source: child
                                    }).contentText();
                                    $out.text(null, ret);
                                ]]></c:script>
                            </c:if>
                            <!-- 构建自定义组件节点，并保持组件名不变（注意，Svelte 组件名的首字母必须大写） -->
                            <!-- TODO 处理 xui:when -->
                            <!-- TODO 直接展开组件属性 -->
                            <_ xpl:is="${child.$type}"
                               xpl:if="nativeType == null"
                               xpl:attrs="{}"
                               xui-name="${child.name}"
                            >
                                <thisLib:GenComponentNode
                                        component="${component}"
                                        node="${child}" />
                            </_>
                        </otherwise>
                    </c:choose>
                </c:for>
            </source>
        </GenComponentNode>
    </tags>
</lib>
