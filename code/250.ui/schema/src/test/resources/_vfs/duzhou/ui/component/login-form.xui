<?xml version="1.0" encoding="UTF-8" ?>

<!--
  - 渡舟平台 - 致力于构建自运维、自监控、可演化的应用生产平台
  - Copyright (C) 2025 Crazydan Studio <https://studio.crazydan.org>
  -
  - This program is free software: you can redistribute it and/or modify
  - it under the terms of the GNU Lesser General Public License as published by
  - the Free Software Foundation, either version 3 of the License, or
  - (at your option) any later version.
  -
  - This program is distributed in the hope that it will be useful,
  - but WITHOUT ANY WARRANTY; without even the implied warranty of
  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  - GNU Lesser General Public License for more details.
  -
  - You should have received a copy of the GNU Lesser General Public License
  - along with this program.
  - If not, see <https://www.gnu.org/licenses/lgpl-3.0.en.html#license-text>.
  -->

<!--
-->
<component xmlns:x="/nop/schema/xdsl.xdef" xmlns:xui="xui"
           x:schema="/duzhou/ui/schema/component.xdef"
           x:extends="none,/duzhou/ui/default/component.xui"
>

    <import as="Form" from="/duzhou/ui/test/form/form.xui" />
    <import as="Input" from="/duzhou/ui/test/form/input.xui" />
    <import as="Button" from="/duzhou/ui/test/form/button.xui" />
    <import as="Mask" from="/duzhou/ui/test/form/mask.xui" />
    <import as="Checkbox" from="/duzhou/ui/test/form/checkbox.xui" />
    <import as="Link" from="/duzhou/ui/test/form/link.xui" />
    <import as="Image" from="/duzhou/ui/test/form/image.xui" />

    <props>
    </props>

    <state>
        <loginInfo>
            <username type="string" />
            <password type="string" />
        </loginInfo>
    </state>

    <template>
        <xui:layout>
            <linear><![CDATA[
                // 整体处于上层容器的中心位置
                v>{
                    >[login-logo]<
                    <[login-form]>
                }<^
            ]]></linear>
        </xui:layout>

        <Image xui:name="login-logo" src="/logo.svg" />
        <!-- Form 的 disabled 属性会逐级传导到其内部的 Input、Button 等支持启用/禁用的组件 -->
        <Form xui:name="login-form" disabled="${state.loginWaiting.enabled}">
            <xui:layout>
                <linear><![CDATA[
                    // 通过表格对齐输入组件，并设置行间隔
                    {
                        | [username-label]> | <[username-input]> |
                        | [password-label]> | <[password-input]> |
                        |                   | <{ [remember-me-input] v[remember-me-label]^ } |
                    }(gap:1u)

                    >[warning-text]<

                    <[login-button]>
                    { [forgot-password-button] <> [register-button] }(gap: {row: 1u})
                ]]></linear>
            </xui:layout>

            <xui:overlay xui:name="waiting-mask" xui:when="${state.loginWaiting.enabled}">
                <xui:layout>
                    <linear><![CDATA[
                        v>[waiting-mask-text]<^
                    ]]></linear>
                </xui:layout>

                <Text xui:name="waiting-mask-text">${state.loginWaiting.msg}</Text>
            </xui:overlay>

            <Text xui:name="username-label">帐号：</Text>
            <Input xui:name="username-input" type="text">
                <!-- 等价于 xui:bind-value="loginInfo.username.value"，用于简化对输入数据变更的监听 -->
                <xui:dispatch when="input"
                              msg="On_Input_for_state_loginInfo_username_value"
                              data="${$event.value}" />
            </Input>

            <Text xui:name="password-label">密码：</Text>
            <Input xui:name="password-input" type="secret"
                   xui:bind-value="loginInfo.password.value" />

            <Animation xui:name="remember-me-animation">
                <Checkbox xui:name="remember-me-input" />
                <Text xui:name="remember-me-label">保持登录？</Text>
            </Animation>

            <Animation xui:name="warning-text-animation"
                       xui:when="${state.loginError.enabled}"
                       enter="fade-in" exit="fade-out"
            >
                <Text xui:name="warning-text" color="warning">
                    ${state.loginError.msg}
                </Text>
            </Animation>

            <Button xui:name="login-button"
                    disabled="${!state.loginInfo.username.valid
                    || !state.loginInfo.password.valid}"
            >
                <Text xui:name="label">登录</Text>

                <xui:style>
                    <!-- 修改组件内部样式，对其做覆盖合并 -->
                    <root>
                        <login-button text-size="2u" />
                    </root>
                </xui:style>
                <xui:dispatch when="click" msg="User_Login_Start"
                              data="${{
                               username: state.loginInfo.username.value,
                               password: state.loginInfo.password.value}}"
                />
            </Button>
            <Link xui:name="forgot-password-button" target="${props.forgotUrl}">
                <Text xui:name="label">忘记密码？</Text>
            </Link>
            <Link xui:name="register-button" target="${props.registerUrl}">
                <Text xui:name="label">注册帐号</Text>
            </Link>
        </Form>
    </template>

    <!-- 逻辑层只用处理消息，而无需关注消息如何触发和发送；视图层只用发送消息，而无需调用函数 -->
    <messages>
        <!-- 每个消息均由唯一的 type 表示，并以 data 作为负载数据的引用名字 -->
        <message type="User_Login_Start">
        </message>

        <message type="On_Input_for_state_loginInfo_username_value">
            <state>
                <loginInfo.username.value>${value}</loginInfo.username.value>
            </state>
        </message>
    </messages>

    <styles>
        <login-button text-size="xui:size">
            <font size="${text-size}" weight="800" />
        </login-button>
    </styles>
</component>
