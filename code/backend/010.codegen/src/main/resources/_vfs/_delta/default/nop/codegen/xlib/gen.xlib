<?xml version="1.0" encoding="UTF-8" ?>
<lib xmlns:x="/nop/schema/xdsl.xdef"
     xmlns:thisLib="thisLib" xmlns:c="c"
     x:schema="/nop/schema/xlib.xdef"
     x:extends="super"
>
    <tags>
        <DefineLoopForOrm x:override="merge">
            <source x:override="merge">
                <thisLib:DefineLoop>
                    <!-- 向原脚本内追加新代码 -->
                    <c:script x:override="append"><![CDATA[
                        let mavenArtifactId = ormModel['ext:mavenArtifactId'];

                        builder.defineGlobalVar(
                            'moduleClassShortPrefix',
                            mavenArtifactId.replace('-','_').$camelCase(true)
                        );
                    ]]></c:script>
                </thisLib:DefineLoop>
            </source>
        </DefineLoopForOrm>

        <DeltaMerge outputMode="none">
            <attr name="targetNode" type="io.nop.core.lang.xml.XNode" />

            <slot name="default" outputMode="node" />

            <source>
                <c:script><![CDATA[
                    import io.nop.xlang.delta.DeltaMerger;
                    import io.nop.xlang.xmeta.SchemaLoader;
                    import io.nop.xlang.xdsl.XDslKeys;
                    import io.crazydan.duzhou.framework.commons.DeltaMergerHelper;

                    let deltaNode = eval_node(slot_default).child(0);

                    let xdefPath = targetNode.getAttr('x:schema');
                    let xdef = SchemaLoader.loadXDefinition(xdefPath);
                    let keys = XDslKeys.of(targetNode);

                    let merger = new DeltaMerger(keys);
                    merger.merge(targetNode, deltaNode, xdef.getRootNode(), false);

                    DeltaMergerHelper.cleanNode(targetNode);

                    return targetNode;
                ]]></c:script>
            </source>
        </DeltaMerge>
    </tags>
</lib>
