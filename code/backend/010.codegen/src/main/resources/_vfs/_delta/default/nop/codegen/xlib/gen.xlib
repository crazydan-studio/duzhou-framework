<?xml version="1.0" encoding="UTF-8" ?>
<lib xmlns:x="/nop/schema/xdsl.xdef"
     xmlns:c="c" xmlns:thisLib="thisLib"
     x:schema="/nop/schema/xlib.xdef"
     x:extends="super"
>
    <tags>
        <MavenPomMerge outputMode="xml">
            <attr name="resource" type="io.nop.core.resource.IResource" />

            <slot name="default" outputMode="node" />

            <source>
                <c:choose>
                    <when test="${resource.length() > 0}">
                        <c:script><![CDATA[
                            import io.nop.core.resource.ResourceHelper;

                            const deltaNode = eval_node(slot_default).child(0);
                            const targetNode = ResourceHelper.readXml(resource);

                            xpl('thisLib:_DoDeltaMerge', {
                                defaultXDefPath: '/duzhou/schema/app/maven-pom.xdef',
                                targetNode,
                                deltaNode,
                            });

                            targetNode.output($out);
                        ]]></c:script>
                    </when>
                    <otherwise>
                        <c:script><![CDATA[
                            const targetNode = eval_node(slot_default).child(0);
                            targetNode.output($out);
                        ]]></c:script>
                    </otherwise>
                </c:choose>
            </source>
        </MavenPomMerge>

        <DeltaMerge outputMode="xml">
            <attr name="targetNode" type="io.nop.core.lang.xml.XNode" />

            <slot name="default" outputMode="node" />

            <source>
                <c:script><![CDATA[
                    const deltaNode = eval_node(slot_default).child(0);

                    xpl('thisLib:_DoDeltaMerge', {targetNode, deltaNode});

                    targetNode.output($out);
                ]]></c:script>
            </source>
        </DeltaMerge>

        <_DoDeltaMerge>
            <attr name="defaultXDefPath" optional="true" type="String" />
            <attr name="deltaNode" type="io.nop.core.lang.xml.XNode" />
            <attr name="targetNode" type="io.nop.core.lang.xml.XNode" />

            <source>
                <c:script><![CDATA[
                    import io.nop.xlang.delta.DeltaMerger;
                    import io.nop.xlang.xmeta.SchemaLoader;
                    import io.nop.xlang.xdsl.XDslKeys;
                    import io.crazydan.duzhou.framework.commons.DeltaMergerHelper;

                    let xdefPath = targetNode.getAttr('x:schema');
                    if (xdefPath == null) {
                        xdefPath = defaultXDefPath;
                    }

                    const xdef = SchemaLoader.loadXDefinition(xdefPath);
                    const keys = XDslKeys.of(targetNode);

                    const merger = new DeltaMerger(keys);
                    merger.merge(targetNode, deltaNode, xdef.getRootNode(), false);

                    DeltaMergerHelper.cleanNode(targetNode);
                ]]></c:script>
            </source>
        </_DoDeltaMerge>
    </tags>
</lib>
