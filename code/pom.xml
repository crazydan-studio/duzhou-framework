<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ 渡舟平台 - 致力于构建自运维、自监控、可演化的应用生产平台
  ~ Copyright (C) 2025 Crazydan Studio <https://studio.crazydan.org>
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program.
  ~ If not, see <https://www.gnu.org/licenses/lgpl-3.0.en.html#license-text>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.crazydan.duzhou.framework</groupId>
    <artifactId>parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Duzhou Framework</name>

    <parent>
        <groupId>io.github.entropy-cloud</groupId>
        <artifactId>nop-entropy</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
        <!-- Note：待测试规范生效后移除test ignore配置 -->
        <maven.test.skip>true</maven.test.skip>
        <maven.test.failure.ignore>true</maven.test.failure.ignore>
        <!-- End -->

        <!-- 项目默认配置数据 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- End -->

        <!-- 指定在对pom.xml过滤时仅对以".version"结尾的变量（需排除掉在非依赖管理中引用的变量）做替换，其余的保持不变 -->
        <maven.filtering.properties.regex>^.*\.version$</maven.filtering.properties.regex>

        <!-- 依赖版本号 -->
        <duzhou-framework.version>0.1.0-SNAPSHOT</duzhou-framework.version>
        <nop-entropy.version>2.0.0-SNAPSHOT</nop-entropy.version>
        <nop-extensions.version>1.0.0-SNAPSHOT</nop-extensions.version>
        <spring-boot.version>3.2.3</spring-boot.version>
    </properties>

    <modules>
        <module>010.codegen</module>
        <module>020.schema</module>
        <module>030.commons</module>
        <module>035.autotest</module>
        <module>050.starter</module>
        <module>100.gateway</module>
        <module>250.ui</module>
    </modules>

    <dependencies>
        <!-- Nop Idea 插件在调试 xlang 时需要该依赖（仅开发期间需要，不会被打包） -->
        <dependency>
            <groupId>io.github.entropy-cloud</groupId>
            <artifactId>nop-xlang-debugger</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- 强制设置 junit 的 scope 为 test，否则，duzhou-autotest 会以 runtime 方式引入，并最终被打包 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <licenses>
        <license>
            <name>GNU Lesser General Public License v3.0</name>
            <url>https://www.gnu.org/licenses/lgpl-3.0.en.html</url>
        </license>
    </licenses>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/crazydan-studio/duzhou-framework/issues</url>
    </issueManagement>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Releases Repository</name>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Snapshots Repository</name>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>nop-repo</id>
            <url>https://nop.repo.crazydan.io/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nop-repo</id>
            <url>https://nop.repo.crazydan.io/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <!-- 本项目子模块，便于其他项目引入 -->
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-commons</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-autotest</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-schema</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-codegen</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-starter-spring</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-starter-undertow</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>

            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-gateway-core</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-gateway-web</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-gateway-web-demo</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-gateway-api</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>

            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-ui-schema</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-ui-component</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-ui-runtime-core</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-ui-runtime-web</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.crazydan.duzhou.framework</groupId>
                <artifactId>duzhou-ui-runtime-android</artifactId>
                <version>${duzhou-framework.version}</version>
            </dependency>
            <!-- End -->

            <dependency>
                <groupId>io.github.entropy-cloud</groupId>
                <artifactId>nop-orm</artifactId>
                <version>${nop-entropy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>mysql</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>postgresql</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>oracle-xe</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>mariadb</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.testcontainers</groupId>
                        <artifactId>mssqlserver</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.github.entropy-cloud</groupId>
                <artifactId>nop-codegen</artifactId>
                <version>${nop-entropy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.ibm.icu</groupId>
                        <artifactId>icu4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.github.entropy-cloud.extensions</groupId>
                <artifactId>nop-undertow-starter</artifactId>
                <version>${nop-extensions.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*.yaml</include>
                    <include>*.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>*.yaml</exclude>
                    <exclude>*.yml</exclude>
                </excludes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>4.0.0-M2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- attach为false表示在安装和部署时，不将可执行包发布/部署到仓库 -->
                        <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/#repackage -->
                        <attach>false</attach>
                        <mainClass>${start-class}</mainClass>
                        <!-- 指定可执行包的分类名称以区分普通jar包 -->
                        <classifier>exec</classifier>
                        <excludes>
                            <exclude>
                                <!-- 仅开发期需要 -->
                                <groupId>io.github.entropy-cloud</groupId>
                                <artifactId>nop-xlang-debugger</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!-- 可执行 jar 打包: https://maven.apache.org/plugins/maven-shade-plugin/examples/executable-jar.html -->
                <!--
                注意，该插件会把依赖全部解包并合并放在可执行的 jar 中，
                即 uberjar 打包模式，其比 Spring boot 的 nested-jars 打包模式的加载速度会更快一点，
                但是，同名类和资源文件会出现被覆盖的问题，因此，需尽量避免同名文件，
                或者通过该插件的 transformer 对同名文件做合并（https://juejin.cn/post/7065862239349112863）。
                在依赖较复杂，且可能存在多版本时，可以尝试采用插件 spring-boot-maven-plugin
                以 nested-jars 模式打包
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.1.1</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <finalName>${project.build.finalName}-exec</finalName>
                                <transformers>
                                    <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <mainClass>${start-class}</mainClass>
                                    </transformer>
                                    <!--
                                    META-INF/services/ 中会存在同名文件，需将其内容合并，以确保
                                    Nop IocCoreInitializer 等能够被 ServiceLoader 加载:
                                    https://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html#ServicesResourceTransformer
                                    -->
                                    <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                </transformers>
                                <!--
                                修复运行 jar 时出现 "java.lang.SecurityException: Invalid signature file digest for Manifest main attributes" 异常的问题:
                                https://stackoverflow.com/questions/34855649/invalid-signature-file-digest-for-manifest-main-attributes-exception-while-tryin#answer-64263739
                                -->
                                <filters>
                                    <filter>
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
